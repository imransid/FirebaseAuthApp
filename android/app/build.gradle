apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services"
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {

}

def enableProguardInReleaseBuilds = false


 
def jscFlavor = 'org.webkit:android-jsc:+'

//apply from: new File(["node", "--print", "require.resolve('@sentry/react-native/package.json')"].execute().text.trim(), "../sentry.gradle")
android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.ieltswithpolockbhai"
    defaultConfig {
        applicationId "com.ieltswithpolockbhai"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode generateVersionCode()
        versionName generateVersionName()
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword '11223344'
            keyAlias 'androiddebugkey'
            keyPassword '11223344'
        }
        release {
            storeFile file('/Users/rafa/Documents/github/untitled folder 2/ieltswithpolockbhai/android/app/my-release-key.keystore')
            storePassword '11223344'
            keyAlias 'my-key-alias'
            keyPassword '11223344'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}


private Integer generateVersionCode() {
    return rootProject.ext.minSdkVersion * 10000000 + 
           project.env.get("MAJOR_VERSION").toInteger() * 10000 + 
           project.env.get("MINOR_VERSION").toInteger() * 100 + 
           project.env.get("PATCH_VERSION").toInteger() * 1 + 
           (project.env.get("RELEASE_NUMBER") ?: 0) * 1000000
}


private String generateVersionName() {
    String versionName = "${project.env.get("MAJOR_VERSION")}.${project.env.get("MINOR_VERSION")}.${project.env.get("PATCH_VERSION")}"
    
    if(project.env.get("PRE_RELEASE") != null && !project.env.get("PRE_RELEASE").isEmpty()) {
        versionName = versionName + "-" + project.env.get("PRE_RELEASE")
    }
    
    if (project.env.get("RELEASE_NUMBER") != null) {
        versionName = versionName + "." + project.env.get("RELEASE_NUMBER")
    }
    
    return versionName
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    implementation(platform("com.google.firebase:firebase-bom:32.7.1"))

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    implementation project(':react-native-vector-icons')
}

apply plugin: 'com.google.gms.google-services'

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")